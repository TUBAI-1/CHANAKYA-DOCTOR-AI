{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91700\\\\Desktop\\\\CHANAKYA DOCTOR AI\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in from localStorage\n    const savedUser = localStorage.getItem('chanakya_user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n      setIsAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n  const signIn = async (email, password) => {\n    try {\n      // Simulate API call - replace with actual authentication\n      if (email && password) {\n        const userData = {\n          id: Date.now(),\n          email,\n          name: email.split('@')[0],\n          role: 'patient'\n        };\n        setUser(userData);\n        setIsAuthenticated(true);\n        localStorage.setItem('chanakya_user', JSON.stringify(userData));\n        return {\n          success: true\n        };\n      } else {\n        throw new Error('Invalid credentials');\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const signUp = async (name, email, password, confirmPassword) => {\n    try {\n      // Simulate API call - replace with actual registration\n      if (password !== confirmPassword) {\n        throw new Error('Passwords do not match');\n      }\n      if (password.length < 6) {\n        throw new Error('Password must be at least 6 characters');\n      }\n      const userData = {\n        id: Date.now(),\n        email,\n        name,\n        role: 'patient'\n      };\n      setUser(userData);\n      setIsAuthenticated(true);\n      localStorage.setItem('chanakya_user', JSON.stringify(userData));\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const signOut = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('chanakya_user');\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    signIn,\n    signUp,\n    signOut\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","signIn","email","password","userData","id","Date","now","name","split","role","setItem","stringify","success","error","message","signUp","confirmPassword","length","signOut","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91700/Desktop/CHANAKYA DOCTOR AI/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in from localStorage\r\n    const savedUser = localStorage.getItem('chanakya_user');\r\n    if (savedUser) {\r\n      setUser(JSON.parse(savedUser));\r\n      setIsAuthenticated(true);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const signIn = async (email, password) => {\r\n    try {\r\n      // Simulate API call - replace with actual authentication\r\n      if (email && password) {\r\n        const userData = {\r\n          id: Date.now(),\r\n          email,\r\n          name: email.split('@')[0],\r\n          role: 'patient'\r\n        };\r\n        \r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n        localStorage.setItem('chanakya_user', JSON.stringify(userData));\r\n        return { success: true };\r\n      } else {\r\n        throw new Error('Invalid credentials');\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const signUp = async (name, email, password, confirmPassword) => {\r\n    try {\r\n      // Simulate API call - replace with actual registration\r\n      if (password !== confirmPassword) {\r\n        throw new Error('Passwords do not match');\r\n      }\r\n      \r\n      if (password.length < 6) {\r\n        throw new Error('Password must be at least 6 characters');\r\n      }\r\n\r\n      const userData = {\r\n        id: Date.now(),\r\n        email,\r\n        name,\r\n        role: 'patient'\r\n      };\r\n      \r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      localStorage.setItem('chanakya_user', JSON.stringify(userData));\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const signOut = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('chanakya_user');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading,\r\n    signIn,\r\n    signUp,\r\n    signOut\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}