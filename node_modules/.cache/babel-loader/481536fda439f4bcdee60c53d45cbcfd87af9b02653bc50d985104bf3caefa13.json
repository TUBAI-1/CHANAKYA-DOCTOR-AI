{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CHAT_HISTORY_KEY='chatHistory';const ChatDashboard=()=>{const[input,setInput]=useState('');const[messages,setMessages]=useState([]);const[loading,setLoading]=useState(false);const chatboxRef=useRef(null);const[selectedDoctor,setSelectedDoctor]=useState(null);const[doctorKey,setDoctorKey]=useState(null);useEffect(()=>{// Load selected doctor and doctorKey\nconst doc=localStorage.getItem('selectedDoctor');if(doc){setSelectedDoctor(JSON.parse(doc));}const key=localStorage.getItem('selectedDoctorKey');if(key){setDoctorKey(key);const history=localStorage.getItem('chatHistory_'+key);if(history){setMessages(JSON.parse(history));}else{setMessages([]);}}// eslint-disable-next-line\n},[]);// Always update localStorage for this doctor when messages change\nuseEffect(()=>{if(doctorKey){localStorage.setItem('chatHistory_'+doctorKey,JSON.stringify(messages));}},[messages,doctorKey]);useEffect(()=>{if(chatboxRef.current){chatboxRef.current.scrollTop=chatboxRef.current.scrollHeight;}},[messages]);const addMessage=(sender,message)=>{setMessages(prev=>[...prev,[sender,message]]);};const sendMessage=async()=>{if(!input.trim())return;addMessage('User',input);setInput('');setLoading(true);try{const response=await fetch('https://backend.buildpicoapps.com/aero/run/llm-api?pk=v1-Z0FBQUFBQm9ZNDlUUXhRX1BxdzdNb0JBYWFNdjRHbGhPLXp6YkVJRlpoMG5DeWUweHphS3VtN1FUbWZ6YUFpODNOVk1NNmp0LXVxOFhjN2p5aHFrUEJ1Yl94S3cyRF9hRVE9PQ==',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({prompt:input})});const data=await response.json();setLoading(false);if(data.status==='success'){addMessage('CHANAKYA GPT',data.text);}else{addMessage('CHANAKYA GPT','Sorry, there was an error processing your request.');}}catch(error){setLoading(false);addMessage('CHANAKYA GPT','Unable to connect to the server. Please try again later.');}};const handleInputKeyDown=e=>{if(e.key==='Enter'){sendMessage();}};return/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-50 min-h-screen font-serif\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-2xl mx-auto p-4\",children:[/*#__PURE__*/_jsxs(\"header\",{style:{backgroundColor:'#e6f9ed'},className:\"text-center p-4 rounded\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-green-700\",children:\"CHANAKYA DOCTOR AI\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-green-800\",children:\"Experience AI Conversations\"}),selectedDoctor&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 flex flex-col items-center\",children:[/*#__PURE__*/_jsx(\"img\",{src:selectedDoctor.img,alt:selectedDoctor.name,className:\"w-16 h-16 rounded-full object-cover border-2 border-green-200 mb-2\"}),/*#__PURE__*/_jsx(\"div\",{className:\"font-semibold text-lg text-green-800\",children:selectedDoctor.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-green-600\",children:selectedDoctor.desc})]})]}),/*#__PURE__*/_jsx(\"div\",{ref:chatboxRef,className:\"bg-white shadow-md rounded p-4 mt-6 h-96 overflow-y-scroll\",children:messages.map((_ref,idx)=>{let[sender,message]=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:sender==='User'?/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:/*#__PURE__*/_jsx(\"span\",{style:{backgroundColor:'#34d399'},className:\"text-white p-2 rounded-lg inline-block\",children:message})}):/*#__PURE__*/_jsx(\"div\",{className:\"text-left\",children:/*#__PURE__*/_jsx(\"span\",{style:{backgroundColor:'#bbf7d0'},className:\"text-green-900 p-2 rounded-lg inline-block\",children:message})})},idx);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mt-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type your message...\",className:\"flex-grow p-2 border border-green-300 rounded-l\",value:input,onChange:e=>setInput(e.target.value),onKeyDown:handleInputKeyDown,disabled:loading}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,style:{backgroundColor:'#22c55e'},className:\"text-white p-2 rounded-r\",disabled:loading,children:\"Send\"}),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"spinner ml-2\",style:{border:'4px solid rgba(0,0,0,0.1)',width:24,height:24,borderRadius:'50%',borderLeftColor:'#22c55e',animation:'spin 1s ease infinite'}})]}),/*#__PURE__*/_jsx(\"style\",{children:\"\\n          @keyframes spin {\\n            0% { transform: rotate(0deg); }\\n            100% { transform: rotate(360deg); }\\n          }\\n        \"})]})});};export default ChatDashboard;","map":{"version":3,"names":["React","useEffect","useRef","useState","jsx","_jsx","jsxs","_jsxs","CHAT_HISTORY_KEY","ChatDashboard","input","setInput","messages","setMessages","loading","setLoading","chatboxRef","selectedDoctor","setSelectedDoctor","doctorKey","setDoctorKey","doc","localStorage","getItem","JSON","parse","key","history","setItem","stringify","current","scrollTop","scrollHeight","addMessage","sender","message","prev","sendMessage","trim","response","fetch","method","headers","body","prompt","data","json","status","text","error","handleInputKeyDown","e","className","children","style","backgroundColor","src","img","alt","name","desc","ref","map","_ref","idx","type","placeholder","value","onChange","target","onKeyDown","disabled","onClick","border","width","height","borderRadius","borderLeftColor","animation"],"sources":["C:/Users/91700/Desktop/CHANAKYA DOCTOR AI/src/components/ChatDashboard.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst CHAT_HISTORY_KEY = 'chatHistory';\r\n\r\nconst ChatDashboard = () => {\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const chatboxRef = useRef(null);\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n  const [doctorKey, setDoctorKey] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Load selected doctor and doctorKey\r\n    const doc = localStorage.getItem('selectedDoctor');\r\n    if (doc) {\r\n      setSelectedDoctor(JSON.parse(doc));\r\n    }\r\n    const key = localStorage.getItem('selectedDoctorKey');\r\n    if (key) {\r\n      setDoctorKey(key);\r\n      const history = localStorage.getItem('chatHistory_' + key);\r\n      if (history) {\r\n        setMessages(JSON.parse(history));\r\n      } else {\r\n        setMessages([]);\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // Always update localStorage for this doctor when messages change\r\n  useEffect(() => {\r\n    if (doctorKey) {\r\n      localStorage.setItem('chatHistory_' + doctorKey, JSON.stringify(messages));\r\n    }\r\n  }, [messages, doctorKey]);\r\n\r\n  useEffect(() => {\r\n    if (chatboxRef.current) {\r\n      chatboxRef.current.scrollTop = chatboxRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  const addMessage = (sender, message) => {\r\n    setMessages(prev => [...prev, [sender, message]]);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n    addMessage('User', input);\r\n    setInput('');\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        'https://backend.buildpicoapps.com/aero/run/llm-api?pk=v1-Z0FBQUFBQm9ZNDlUUXhRX1BxdzdNb0JBYWFNdjRHbGhPLXp6YkVJRlpoMG5DeWUweHphS3VtN1FUbWZ6YUFpODNOVk1NNmp0LXVxOFhjN2p5aHFrUEJ1Yl94S3cyRF9hRVE9PQ==',\r\n        {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ prompt: input })\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      setLoading(false);\r\n      if (data.status === 'success') {\r\n        addMessage('CHANAKYA GPT', data.text);\r\n      } else {\r\n        addMessage('CHANAKYA GPT', 'Sorry, there was an error processing your request.');\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      addMessage('CHANAKYA GPT', 'Unable to connect to the server. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleInputKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-green-50 min-h-screen font-serif\">\r\n      <div className=\"max-w-2xl mx-auto p-4\">\r\n        <header style={{ backgroundColor: '#e6f9ed' }} className=\"text-center p-4 rounded\">\r\n          <h1 className=\"text-2xl font-bold text-green-700\">CHANAKYA DOCTOR AI</h1>\r\n          <p className=\"text-sm text-green-800\">Experience AI Conversations</p>\r\n          {selectedDoctor && (\r\n            <div className=\"mt-4 flex flex-col items-center\">\r\n              <img src={selectedDoctor.img} alt={selectedDoctor.name} className=\"w-16 h-16 rounded-full object-cover border-2 border-green-200 mb-2\" />\r\n              <div className=\"font-semibold text-lg text-green-800\">{selectedDoctor.name}</div>\r\n              <div className=\"text-xs text-green-600\">{selectedDoctor.desc}</div>\r\n            </div>\r\n          )}\r\n        </header>\r\n        <div ref={chatboxRef} className=\"bg-white shadow-md rounded p-4 mt-6 h-96 overflow-y-scroll\">\r\n          {messages.map(([sender, message], idx) => (\r\n            <div key={idx} className=\"mb-4\">\r\n              {sender === 'User' ? (\r\n                <div className=\"text-right\">\r\n                  <span style={{ backgroundColor: '#34d399' }} className=\"text-white p-2 rounded-lg inline-block\">{message}</span>\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-left\">\r\n                  <span style={{ backgroundColor: '#bbf7d0' }} className=\"text-green-900 p-2 rounded-lg inline-block\">{message}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"flex items-center mt-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type your message...\"\r\n            className=\"flex-grow p-2 border border-green-300 rounded-l\"\r\n            value={input}\r\n            onChange={e => setInput(e.target.value)}\r\n            onKeyDown={handleInputKeyDown}\r\n            disabled={loading}\r\n          />\r\n          <button\r\n            onClick={sendMessage}\r\n            style={{ backgroundColor: '#22c55e' }}\r\n            className=\"text-white p-2 rounded-r\"\r\n            disabled={loading}\r\n          >\r\n            Send\r\n          </button>\r\n          {loading && (\r\n            <div className=\"spinner ml-2\" style={{ border: '4px solid rgba(0,0,0,0.1)', width: 24, height: 24, borderRadius: '50%', borderLeftColor: '#22c55e', animation: 'spin 1s ease infinite' }} />\r\n          )}\r\n        </div>\r\n        <style>{`\r\n          @keyframes spin {\r\n            0% { transform: rotate(0deg); }\r\n            100% { transform: rotate(360deg); }\r\n          }\r\n        `}</style>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}